@model MDB.Models.LoginCredential

@{
    ViewBag.Title = "ResetPasswordCommand";
    string alertMessage = (ViewBag.Message != null ? (string)ViewBag.Message : "");
}

@if (alertMessage != "")
{
    <h3 style="color:red">@alertMessage</h3>
    <hr />
}
<br />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <fieldset class="formField">
        <div class="legend">Adresse de courriel</div>
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Email) } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        <br />
        <input type="submit" value="Soumettre" class="btn btn-default" />
    </fieldset>
}
@Html.ActionLink("S'enregistrer", "Subscribe")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script defer>
        $("#toggleShowPassword").hide();
        $("#toggleShowPassword").click(() => {
            $("#Password").attr("type", $("#Password").attr("type") == 'password' ? 'text' : 'password');
            $("#toggleShowPassword").toggleClass("fa-eye");
            $("#toggleShowPassword").toggleClass("fa-eye-slash");
        });
        $("#Password").keyup(() => {
            if ($("#Password").val() == "")
                $("#toggleShowPassword").hide();
            else
                $("#toggleShowPassword").show();
        })
    </script>
}
